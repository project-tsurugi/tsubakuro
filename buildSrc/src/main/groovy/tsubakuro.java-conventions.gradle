plugins {
    id 'tsubakuro.java-base'
    id 'checkstyle'

    id 'com.github.spotbugs'
}

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

checkstyle {
    configFile = rootProject.file('buildSrc/src/main/resources/checkstyle.xml')
    if ('strict' == findProperty('checkMode')) {
        maxWarnings = 0
    }
}

spotbugsMain {
    reports {
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.xml")
        }
    }
}

spotbugsTest.enabled = false
checkstyleTest.enabled = false

javadoc.failOnError = false

jar {
    manifest.attributes (
        'Build-Timestamp': buildTimestamp,
        'Build-Revision' : buildRevision,
        'Build-Version'  : version,
        'Created-By'     : createdBy,
        'Build-Jdk'      : buildJdk,
        'Build-OS'       : buildOs,
    )
}

task writeVersion(type: WriteProperties) {
    description 'generate version file to META-INF/tsurugidb/{project.name}.properties'
    inputs.property('Build-Revision', buildRevision)
    outputFile "${project.buildDir}/generated/version/META-INF/tsurugidb/${project.name}.properties"
    properties (
        'Build-Timestamp': buildTimestamp,
        'Build-Revision' : buildRevision,
        'Build-Version'  : version,
        'Created-By'     : createdBy,
        'Build-Jdk'      : buildJdk,
        'Build-OS'       : buildOs,
    )
}
sourceSets.main.output.dir("${project.buildDir}/generated/version")
processResources.dependsOn writeVersion

tasks.named('test') {
    useJUnitPlatform()

    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}
